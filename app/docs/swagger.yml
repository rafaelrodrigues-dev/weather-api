swagger: '2.0'
info:
  title: Weather API
  description: API to get weather data
  verison: '1'
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
tags:
  - name: Weather
    description: Endpoints for weather data
  - name: User
    description: Endpoints for user management
  - name: Auth
    description: Endpoints for authentication and registration
security:
  - bearerAuth: []
paths:
  /api/v1/weather:
    get:
      summary: Get current weather for a city
      tags:
        - Weather
      parameters:
        - name: city
          in: query
          type: string
          required: true
          description: City name
        - name: lang
          in: query
          type: string
          required: false
          description: Language for the response (default is 'en')
      responses:
        200:
          description: Current weather data
        400:
          description: Parameter city is required
        401:
          description: Unauthorized, access_token is required
        404:
          description: Unable to retrieve weather data

  /api/v1/forecast:
    get:
      summary: Get forecast weather for a city
      tags:
        - Weather
      parameters:
        - name: city
          in: query
          type: string
          required: true
          description: City name
        - name: lang
          in: query
          type: string
          required: false
          description: Language for the response (default is 'en')
      responses:
        200:
          description: Forecast weather data
        400:
          description: Parameter city is required
        401:
          description: Unauthorized, access_token is required
        404:
          description: Unable to retrieve weather data
  
  /api/v1/me:
    get:
      summary: Get current user data
      tags:
        - User
      responses:
        200:
          description: Returns user data
        401:
          description: Unauthorized, access_token is required

  /api/v1/history:
    get:
      summary: Get user's weather history
      tags:
        - User
      responses:
        200:
          description: Returns user data
        401:
          description: Unauthorized, access_token is required

  /api/v1/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      security: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
            required:
              - name
              - email
              - password
      responses:
        201:
          description: User created successfully
        400:
          description: Missing required field(s), email is not valid, Email already exists or password is too weak

  /api/v1/auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      security: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
      responses:
        200:
          description: Login successful, returns access_token and refresh_token
        400:
          description: Missing required field(s)
        401:
          description: Invalid credentials

  /api/v1/auth/refresh:
    post:
      summary: Get a new access_token using refresh_token
      tags:
        - Auth
      responses:
        200:
          description: Returns a new access_token
        401:
          description: Invalid or expired refresh_token